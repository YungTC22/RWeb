{"version":3,"sources":["Typer.js","Projects.js","About.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["AnimatedTypingComponent","props","react_default","a","createElement","dist_default","speed","val","Delay","ms","Backspace","count","Projects","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","inherits","createClass","key","value","_this2","d3","then","d","console","log","setState","className","Typer_AnimatedTypingComponent","map","i","reactstrap_es","body","outline","color","Name","Description","target","href","Link","size","Component","About","classes","section","list","skills","facts","fact","orderedSkillList","sort","style","fontSize","margin","marginBottom","j","skill","Main","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","App","HashRouter","to","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03d71fcc.chunk.js","sourcesContent":["import Typing from 'react-typing-animation';\nimport React from 'react';\n\nexport const AnimatedTypingComponent = (props) => {\n    return (\n    <Typing speed={200}>\n        <span>{props.val}</span>\n        <Typing.Delay ms={1000} />\n        <Typing.Backspace count={20} />\n    </Typing>\n    )\n};","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { Card, Button, CardBody, CardTitle, CardText, Col, CardDeck } from 'reactstrap';\nimport './Projects.css';\nimport { AnimatedTypingComponent } from './Typer.js'\n\nexport class Projects extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            val: \"PROJECTS COMPLETED\"\n        }\n    }\n\n    componentDidMount() {\n        d3.csv('data/projects.csv').then((d) => {\n            console.log(d);\n            this.setState({ data: d });\n        })\n    }\n\n    render() {\n        return <div className=\"container\">\n            <h1>< AnimatedTypingComponent val={this.state.val} /> </h1>\n            <p></p>\n            {this.state.data.map((d, i) => {\n                return (\n                    <Col key={\"project\" + i}>\n                        <CardDeck>\n                            <Card body outline color=\"light\">\n                                <CardBody>\n                                    <CardTitle>\n                                        <h2 className=\"text-dark\"> {d.Name}</h2>\n                                    </CardTitle>\n                                    <CardText>\n                                        {d.Description}\n                                    </CardText>\n                                    <a target=\"blank\" href={d.Link}>\n                                        <Button className=\"Buttonz\" outline color=\"success\" size=\"lg\">Link</Button>\n                                    </a>\n                                </CardBody>\n                            </Card>\n                        </CardDeck>\n                        <br />\n                    </Col>\n                )\n            })}\n        </div>\n    }\n}","import React, { Component } from 'react';\nimport { Card, CardBody, CardTitle, CardText, Col, CardDeck } from 'reactstrap';\nimport { AnimatedTypingComponent } from './Typer.js'\nimport './About.css';\n\nexport class About extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            val: \"ABOUT ME\"\n        }\n\n        this.classes = [\n            {\n                section: \"University of Washington 2017 - Present\",\n                list: [\n                    \"INFO 201 (R)\",\n                    \"CSE 142 (Java)\", \n                    \"INFO 360 (Design)\", \n                    \"INFO 340 (Web Dev)\", \n                    \"INFO 180 (Python)\", \n                    \"INFO330 (SQL)\",\n                ]\n            }\n        ]\n\n        this.skills = [\n            {\n                section: \"Programming Languages\",\n                list: [\n                    \"R\", \"Python\", \"HTML/CSS/JavaScript\", \n                    \"React/Redux\", \"Java\", \"SQL\",\n                ]\n            },\n            {\n                section: \"Applications\", \n                list: [\n                    \"Tableau\", \"PowerBI\", \"Microsoft Applications\"\n                ]\n            },\n\n            {\n                section: \"Languages\", \n                list: [\n                    \"Chinese\", \"Spanish\", \"Taiwanese\"\n                ]\n            }\n        ]\n\n        this.facts = [\n            {\n                section: \"Fun Facts\",\n                list: [\n                    \"I am Taiwanese American\", \n                    \"I am a vegetarian Chef\", \n                    \"I love video games\",\n                    \"I am multi-lingual\",\n                    \"I aspire to become a data scientist\",\n                    \"Proud Seattleite\"\n                ]\n            }\n        ]\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>< AnimatedTypingComponent val={this.state.val} /></h1>\n                <Col>\n                    <CardDeck>\n\n                        <Card body outline color=\"light\">\n                            <CardBody>\n                                <CardTitle>\n                                    <h2 className=\"text-success\"> General Info </h2>\n                                </CardTitle>\n\n                                <CardText>\n                                    {this.facts.map((fact, i) => {\n                                        let orderedSkillList = fact.list.sort();\n                                        return <Col key={\"skill\" + i} style={{ fontSize: 17 }}> <strong>{fact.section}</strong>\n                                            <ul style={{ margin: 0, fontSize: 16, marginBottom: 5 }}>\n                                                {orderedSkillList.map((className, j) => {\n                                                    return <li key={\"subskill\" + i + '-' + j}>{className}</li>\n                                                })}\n                                            </ul>\n                                        </Col>\n                                    })}\n                                </CardText>\n                            </CardBody>\n                        </Card>\n\n                        <Card body outline color=\"light\">\n                            <CardBody>\n                                <CardTitle>\n                                    <h2 className=\"text-success\"> Skills </h2>\n                                </CardTitle>\n\n                                <CardText>\n                                    {this.skills.map((skill, i) => {\n                                        let orderedSkillList = skill.list.sort();\n                                        return <Col key={\"skill\" + i} style={{ fontSize: 17 }}> <strong>{skill.section}</strong>\n                                            <ul style={{ margin: 0, fontSize: 16, marginBottom: 5 }}>\n                                                {orderedSkillList.map((className, j) => {\n                                                    return <li key={\"subskill\" + i + '-' + j}>{className}</li>\n                                                })}\n                                            </ul>\n                                        </Col>\n                                    })}\n                                </CardText>\n                            </CardBody>\n                        </Card>\n\n                        <Card body outline color=\"light\">\n                            <CardBody >\n                                <CardTitle>\n                                    <h2 className=\"text-success\"> Classes </h2>\n                                </CardTitle>\n\n                                <CardText>\n                                    {this.classes.map((classes, i) => {\n                                        let orderedSkillList = classes.list.sort();\n                                        return <Col key={\"skill\" + i} style={{fontSize: 17}}><strong>{classes.section}</strong>\n                                            <ul style={{ margin: 0, fontSize: 16, marginBottom: 8 }}>\n                                                {orderedSkillList.map((className, j) => {\n                                                    return <li key={\"subskill\" + i + '-' + j}>{className}</li>\n                                                })}\n                                            </ul>\n                                        </Col>\n                                    })}\n                                </CardText>\n                            </CardBody>\n                        </Card>\n\n                    </CardDeck>\n                    <br />\n                </Col>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport './Main.css';\nimport { AnimatedTypingComponent } from './Typer.js'\n\nexport class Main extends Component {\n    state = {\n        val: \"RANI CHANG\"\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <h1> < AnimatedTypingComponent val={this.state.val} /> </h1>\n                <br />\n                <h2 className=\"text-dark\">Hello :) Welcome to my personal website!</h2>\n\n                <div className=\"introduction\">\n                    <p>I am currently a sophomore at the University of Washington pursuing a double degree in Informatics,\n                        Health Informatics and Health Information Management (HIHIM)\n                        and a minor in Business Entrepreneurship. I aspire to become a data scientist\n                        that utilizes data to help others boost their careers/businesses!\n                    </p>\n                </div>\n\n                <section>\n                    <a target=\"blank\" href=\"https://github.com/YungTC22\">\n                        <Button outline color=\"success\" size=\"lg\">GitHub</Button>\n                    </a>\n                </section>\n\n                <br />\n                \n                <section>\n                    <a target=\"blank\" href=\"https://linkedin.com/in/yungtc/\">\n                        <Button outline color=\"success\" size=\"lg\">Linkedin</Button>\n                    </a>\n                </section>\n\n            </div>\n        );\n    }\n}","\nimport React, { Component } from 'react';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Projects } from './Projects';\nimport { About } from './About';\nimport { Main } from './Main';\nimport './App.css';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <Router>\n                <div className=\"body\">\n                    <nav className=\"wrapper navbar navbar-default\">\n                        <Link className=\"text-dark\" to=\"/\">MAIN</Link>\n                        {' '}\n                        <Link className=\"text-dark\" to=\"/about\">ABOUT</Link>\n                        {' '}\n                        <Link className=\"text-dark\" to=\"/projects\">PROJECTS</Link>\n                        {' '}\n                    </nav>\n\n                    <Route exact path=\"/\" component={Main} />\n                    <Route path=\"/projects\" component={Projects} />\n                    <Route path=\"/about\" component={About} />\n                </div>\n            </Router>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}