{"version":3,"sources":["logo.svg","Projects.js","About.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Projects","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","inherits","createClass","key","value","_this2","d3","then","d","console","log","setState","react_default","a","createElement","className","map","i","reactstrap_es","body","outline","color","Name","Description","target","href","Link","size","Component","About","apply","arguments","Main","App","HashRouter","Fragment","src","logo","alt","to","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2500388d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { Card, Button, CardBody, CardTitle, CardText, Col, CardDeck } from 'reactstrap';\n\nexport class Projects extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: []\n        }\n    }\n    componentDidMount() {\n        d3.csv('data/projects.csv').then((d) => {\n            console.log(d);\n            this.setState({ data: d });\n        })\n    }\n\n    render() {\n        console.log(this.state.data)\n        return <div className=\"container\">\n            <h1>PROJECTS COMPLETED</h1>\n            <p></p>\n            {this.state.data.map((d, i) => {\n                return (\n                    <Col key={\"project\" + i}>\n                        <CardDeck>\n                            <Card body outline color=\"info\">\n                                <CardBody>\n                                    <CardTitle>\n                                        <h2> {d.Name}</h2>\n                                    </CardTitle>\n                                    <CardText>\n                                        {d.Description}\n                                    </CardText>\n                                    <a target=\"_blank\" href={d.Link}>\n                                        <Button outline color=\"info\" size=\"lg\">Link</Button>\n                                    </a>\n                                </CardBody>\n                            </Card>\n                        </CardDeck>\n                        <br />\n                    </Col>\n                )\n            })}\n        </div>\n    }\n}","import React, { Component } from 'react';\nimport { Card, CardBody, CardTitle, CardText, Col, CardDeck } from 'reactstrap';\n\nexport class About extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>ABOUT MEE</h1>\n                <Col>\n                    <CardDeck>\n\n                        <Card body outline color=\"info\">\n                            <CardBody>\n                                <CardTitle>\n                                    <h2> General Info </h2>\n                                </CardTitle>\n\n                                <CardText>\n                                    <p> Taiwanese </p>\n                                    <p> Multi-Lingual </p>\n                                    <p> Chef </p>\n                                    <p> Video-Gamer </p>\n                                </CardText>\n                            </CardBody>\n                        </Card>\n\n                        <Card body outline color=\"info\">\n                            <CardBody>\n                                <CardTitle>\n                                    <h2> Skills </h2>\n                                </CardTitle>\n\n                                <CardText>\n                                    <p> R </p>\n                                    <p> Python </p>\n                                    <p> SQL </p>\n                                    <p> HTML/CSS </p>\n                                </CardText>\n                            </CardBody>\n                        </Card>\n                    </CardDeck>\n                    <br />\n                </Col>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Card, Button, CardBody, CardTitle, CardText, Col, CardDeck } from 'reactstrap';\n\nexport class Main extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>RANI CHANG</h1>\n                <CardDeck>\n                    <Card body outline color=\"info\">\n                        <CardBody>\n                            <CardTitle>\n                                <h2>Introduction</h2>\n                                <p></p>\n                            </CardTitle>\n\n                            <CardText>\n                                <p>Hello :) Welcome to my site!</p>\n                                <p>I am a sophomore at the Univeristy of Washington studying B.S Informatics, </p>\n                                <p>B.S Health Informatics and Health Information Management, and a minor in Business Entrepreneurship </p>\n                                <p>I enjoy Seattle's Weather and GO DAWGS</p>\n                                <p>Check Out My Link Below~</p>\n                            </CardText>\n\n                            <a target=\"_blank\" href=\"https://linkedin.com/in/yungtc/\">\n                                <Button outline color=\"info\" size=\"lg\">Linkedin</Button>\n                            </a>\n\n                        </CardBody>\n                    </Card>\n                </CardDeck>\n                <br />\n            </div>\n        );\n    }\n}","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Projects } from './Projects';\nimport { About } from './About';\nimport { Main } from './Main';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <div>\n                <Router>\n                    <React.Fragment>\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                        <Link className=\"text-info\" to=\"/\">MAIN</Link>\n                        <Link className=\"text-info\" to=\"/about\">ABOUT</Link>\n                        <Link className=\"text-info\" to=\"/projects\">PROJECTS</Link>\n                        <Route exact path=\"/\" component={Main} />\n                        <Route path=\"/projects\" component={Projects} />\n                        <Route path=\"/about\" component={About} />\n                    </React.Fragment>\n                </Router>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}